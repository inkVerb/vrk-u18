#!/bin/sh
# inkVerb updater for Vrk™ Station, verb.ink

# This updates the Vrk™ Station
## This contains many version updaters to update a Vrk™ Station sequentially, one version at a time.
## This is run at the path: /opt/vrk/vrk-update/update

# DEV NOTE: Larger versions must be at the bottom, smaller versions at the top, so "descending"

# Normally this is run automatically by the Boss updatevrk
## Run this if you have downloaded and copied vrk and put it into the home folder
## You must run this per user to update Bosses and Surfers

# How to use:
## cd ~/vrk/inst
## chmod ug+x upvrk
## sudo ./upvrk


MIN_KVERNO=0.31.09
KUPGRADE_REPO="vrk"

# Sample version updater:
#UPGRADE_PATCH_KVERNO=0.31.09
#
## Run the update scripts for this patch
#cd /home
#for PATCH_USER_crude in ./*/
#do
#PATCH_USER_slash=$(echo $PATCH_USER_crude | sed 's/\.//g'); PATCH_USER=$(echo $PATCH_USER_slash | sed 's/\///g')
#if [ -d "/home/${PATCH_USER}" ]; then
# if [ -f "/home/${PATCH_USER}/.vrk/configs/stationinfo" ]; then
#. /home/${PATCH_USER}/.vrk/configs/stationinfo
#  if [ $(echo ${UPGRADE_PATCH_KVERNO} | sed -e "s/\.//g" | sed -e "s/^0*//g") -gt $(echo ${USER_KVERNO} | sed -e "s/\.//g" | sed -e "s/^0*//g") ] ; then
#
## Move to working directory of the patch
#if [ -d "/home/${SUDO_USER}/${KUPGRADE_REPO}/${UPGRADE_PATCH_KVERNO}/" ]; then
#cd /home/${SUDO_USER}/${KUPGRADE_REPO}/${UPGRADE_PATCH_KVERNO}/; fi
#
###### PER-USER PATCH SCRIPTS GO HERE ### use: ${PATCH_USER}
## Make the user do the job himself
## NOTE: PWD is /home/${SUDO_USER}/${KUPGRADE_REPO}/${UPGRADE_PATCH_KVERNO}/
## sudo -u ${PATCH_USER} echo "I am myself v${UPGRADE_PATCH_KVERNO}."
#
#
################STOP#USER#PATCH#
## Set and refresh the current version into inklist for the patch user
#sed -i "s/USER_KVERNO=.*/USER_KVERNO=${UPGRADE_PATCH_KVERNO}/g" /home/${PATCH_USER}/.vrk/configs/stationinfo
#  fi
# fi
#fi
#done
## Global patch
#if [ $(echo ${UPGRADE_PATCH_KVERNO} | sed -e "s/\.//g" | sed -e "s/^0*//g") -gt $(echo ${KVERNO} | sed -e "s/\.//g" | sed -e "s/^0*//g") ] ; then
#
### Notes
#CLEAN_PATCH_KVERNO=$(echo $UPGRADE_PATCH_KVERNO | sed -e "s/\.//g")
#PCLdoc="$(cat <<UPCL
#Patch ${UPGRADE_PATCH_KVERNO} Changelog:
### Patch Notes Here...
#UPCL
#)"
#echo "$PCLdoc"
#### So we can call a specific version later if needed
#eval "v$CLEAN_PATCH_KVERNO='$(echo "$PCLdoc")'"
#
## Verify the working directory of the patch
#if [ -d "/home/${SUDO_USER}/${KUPGRADE_REPO}/${UPGRADE_PATCH_KVERNO}/" ]; then
#cd /home/${SUDO_USER}/${KUPGRADE_REPO}/${UPGRADE_PATCH_KVERNO}/; fi
#
###### GLOBAL SCRIPTS GO HERE #####
## NOTE: PWD is /home/${SUDO_USER}/${KUPGRADE_REPO}/${UPGRADE_PATCH_KVERNO}/
#
#
###### END GLOBAL SCRIPT
## Set and refresh the current version into inklists
#sed -i "s/KVERNO=.*/KVERNO=${UPGRADE_PATCH_KVERNO}/g" /opt/vrk/vrkverno
#. /opt/vrk/vrkverno
#fi
################END#UPDATE#PATCH#


# Check to make sure this is run as sudo, but not run by root
## If root or sudo
if [ "$(id -u)" = "0" ]; then
## If sudo is NOT present
 if [ -z "${SUDO_COMMAND}" ]; then
echo "Run this as a sudoer sudo, not as root. You'll have to exit root and perhaps re-login as the sudoer. Then...
like this:
sudo ./upvrk
"
exit 0
 fi
fi
## If sudo is NOT present
if [ -z "${SUDO_COMMAND}" ]; then
echo "Run this as a sudoer sudo, not merely as a sudoer.
like this:
sudo ./upvrk
"
exit 0
fi

# Check if present
if [ ! -d "/home/${SUDO_USER}/${KUPGRADE_REPO}" ]; then
echo "The vrk folder is not in the right place. I quit."
exit 22
fi

# Check to make sure this is run as sudo, but not run by root
## If root or sudo
if [ "$(id -u)" = "0" ]; then
## If sudo is NOT present
 if [ -z "${SUDO_COMMAND}" ]; then
echo "Run this as a sudoer sudo, not as root. You'll have to exit root and perhaps re-login as the sudoer. Then...
like this:
sudo ./govrk
"
exit 0
 fi
fi
## If sudo is NOT present
if [ -z "${SUDO_COMMAND}" ]; then
echo "Run this as a sudoer sudo, not merely as a sudoer.
like this:
sudo ./govrk
"
exit 0
fi

# Check if present
if [ ! -d "/home/${SUDO_USER}/${KUPGRADE_REPO}" ]; then
echo "The vrk folder is not in the right place. I quit."
exit 22
fi

# Include the configs
. /opt/vrk/vrkverno
. /opt/vrk/machineinfo

# Check minimal updateable version
if [ $(echo ${MIN_KVERNO} | sed -e "s/\.//" | sed -e "s/^0*//") -gt $(echo ${KVERNO} | sed -e "s/\.//" | sed -e "s/^0*//") ] ; then
echo "Can't run. The minimum version to run is ${MIN_KVERNO}. This Vrk version is ${KVERNO}. I quit."
exit 0
fi

# Update/refresh Bosses, Surfers, Droids, and Donjon
rm -rf /opt/vrk/boss
rm -rf /opt/vrk/surf
rm -rf /opt/vrk/donjon
cp -rf /home/${SUDO_USER}/${KUPGRADE_REPO} /opt/
rm -f /opt/vrk/inst/vrkverno
chmod ug+x /opt/vrk/boss/*
chmod ug+x /opt/vrk/surf/*
chmod ug+x /opt/vrk/donjon/*
chmod ug+x /opt/vrk/donjon/vrktemplates/7_BASH
chmod ug+x /opt/vrk/droids/*
cd /opt/vrk
wget https://raw.githubusercontent.com/inkVerb/vrk/master/README.md
echo "Surfers, droids, and bosses have been updated."

# Vrk user update
## Check if Vrk Staion is installed for this user
cd /home
for PATCH_USER_crude in ./*/
do
PATCH_USER_slash=$(echo $PATCH_USER_crude | sed 's/\.//g'); PATCH_USER=$(echo $PATCH_USER_slash | sed 's/\///g')
if [ -d "/home/${PATCH_USER}" ]; then
 if [ -f "/home/${PATCH_USER}/.vrk/configs/stationinfo" ]; then
. /home/${PATCH_USER}/.vrk/configs/stationinfo
  if [ "${VRK_INSTALLED}" = "YES" ]; then
## Refresh the links for the user
/opt/vrk/boss/vrkfresh ${PATCH_USER}
## Refresh Vubuntu Vallpaper
/opt/vrk/boss/install-vubuntu-vallpaper
  fi
 fi
fi
done

# Refresh bosses
ln -sfn /opt/vrk/boss/* /usr/bin/
cd /usr/bin/
for x in * .[!.]* ..?*; do if [ -L "$x" ] && ! [ -e "$x" ]; then rm -- "$x"; fi; done

# Run version-by-version updates


UPGRADE_PATCH_KVERNO=0.31.10

# Run the update scripts for this patch
cd /home
for PATCH_USER_crude in ./*/
do
PATCH_USER_slash=$(echo $PATCH_USER_crude | sed 's/\.//g'); PATCH_USER=$(echo $PATCH_USER_slash | sed 's/\///g')
if [ -d "/home/${PATCH_USER}" ]; then
 if [ -f "/home/${PATCH_USER}/.vrk/configs/stationinfo" ]; then
. /home/${PATCH_USER}/.vrk/configs/stationinfo
  if [ $(echo ${UPGRADE_PATCH_KVERNO} | sed -e "s/\.//g" | sed -e "s/^0*//g") -gt $(echo ${USER_KVERNO} | sed -e "s/\.//g" | sed -e "s/^0*//g") ] ; then

# Move to working directory of the patch
if [ -d "/home/${SUDO_USER}/${KUPGRADE_REPO}/${UPGRADE_PATCH_KVERNO}/" ]; then
cd /home/${SUDO_USER}/${KUPGRADE_REPO}/${UPGRADE_PATCH_KVERNO}/; fi

##### PER-USER PATCH SCRIPTS GO HERE ### use: ${PATCH_USER}
# Make the user do the job himself
# NOTE: PWD is /home/${SUDO_USER}/${KUPGRADE_REPO}/${UPGRADE_PATCH_KVERNO}/
# sudo -u ${PATCH_USER} echo "I am myself v${UPGRADE_PATCH_KVERNO}."


###############STOP#USER#PATCH#
# Set and refresh the current version into inklist for the patch user
sed -i "s/USER_KVERNO=.*/USER_KVERNO=${UPGRADE_PATCH_KVERNO}/g" /home/${PATCH_USER}/.vrk/configs/stationinfo
  fi
 fi
fi
done
# Global patch
if [ $(echo ${UPGRADE_PATCH_KVERNO} | sed -e "s/\.//g" | sed -e "s/^0*//g") -gt $(echo ${KVERNO} | sed -e "s/\.//g" | sed -e "s/^0*//g") ] ; then

## Notes
CLEAN_PATCH_KVERNO=$(echo $UPGRADE_PATCH_KVERNO | sed -e "s/\.//g")
PCLdoc="$(cat <<UPCL
Patch ${UPGRADE_PATCH_KVERNO} Changelog:
## Patch Notes Here...
UPCL
)"
echo "$PCLdoc"
### So we can call a specific version later if needed
eval "v$CLEAN_PATCH_KVERNO='$(echo "$PCLdoc")'"

# Verify the working directory of the patch
if [ -d "/home/${SUDO_USER}/${KUPGRADE_REPO}/${UPGRADE_PATCH_KVERNO}/" ]; then
cd /home/${SUDO_USER}/${KUPGRADE_REPO}/${UPGRADE_PATCH_KVERNO}/; fi

##### GLOBAL SCRIPTS GO HERE #####
# NOTE: PWD is /home/${SUDO_USER}/${KUPGRADE_REPO}/${UPGRADE_PATCH_KVERNO}/


##### END GLOBAL SCRIPT
# Set and refresh the current version into inklists
sed -i "s/KVERNO=.*/KVERNO=${UPGRADE_PATCH_KVERNO}/g" /opt/vrk/vrkverno
. /opt/vrk/vrkverno
fi
###############END#UPDATE#PATCH#


# Cleanup
rm -rf /home/${SUDO_USER}/${KUPGRADE_REPO}

# Finish
echo "Vrk Station and users are Vrking at v${KVERNO} framework from ${KUPGRADE_REPO}."
